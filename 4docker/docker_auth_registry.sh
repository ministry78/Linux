#下载镜像
docker pull docker.cn/docker/ubuntu
docker run -d --name registry -p 5000:5000 registry


#auth-nginx可自己做
docker run -d --name nginx --link registry:registry -p 443:443 larrycai/nginx-auth-proxy
#larrycai/nginx-auth-proxy的dockerfile
FROM ubuntu:trusty
ENV DEBIAN_FRONTEND noninteractive

# nginx
RUN apt-get update -q \
    && apt-get install -yf build-essential python-software-properties software-properties-common \
    && add-apt-repository ppa:nginx/stable \
    && apt-get update -q \
    && apt-get -y install -y curl

# build nginx from source with http auth module enabled
RUN apt-get -y install libpcre3-dev zlib1g-dev libssl-dev 

RUN curl -s http://nginx.org/download/nginx-1.6.2.tar.gz | tar -xz -C /tmp \
	&& cd /tmp/nginx-1.6.2 \
	&& ./configure --with-http_ssl_module --with-http_auth_request_module && make && make install 

# put self signed ssl key (generated by htpasswd
# RUN apt-get -y install apache2-utils
ADD server.crt /etc/ssl/certs/docker-registry
ADD server.key /etc/ssl/private/docker-registry

# nginx configuration
# follow https://github.com/docker/docker-registry/tree/master/contrib/nginx

ADD nginx/nginx.conf /usr/local/nginx/conf/nginx.conf
ADD nginx/docker-registry.htpasswd /usr/local/nginx/conf/docker-registry.htpasswd
# ADD nginx/docker-registry.conf /usr/local/nginx/conf/docker-registry.conf
ADD nginx/nginx.default /usr/local/nginx/conf/sites-enabled/default
ADD start.sh /start.sh

EXPOSE 80 443
CMD /start.sh


#使用
$ docker cp nginx:/ca.pem $PWD
$ cat ca.pem | sudo tee -a /etc/ssl/certs/ca-certificates.crt
#停止容器后重启docker
curl -i -k https://larrycai:passwd@dokk.co
# 改 cat /etc/hosts
127.0.0.1 boot2docker localhost localhost.local dokk.co
docker login -u larrycai -p passwd -e test@gmail.com dokk.co



###自己来更改
1.用nginx配好basic auth (使用htpasswd）
2.做好https自签名证书
3.用nginx配好https服务
4.把CA根证书导入要访问的docker机器
###在基本上更改证书和账号密码
htpasswd -c .htpasswd wsylib
mv .htpasswd docker-registry.htpasswd

通过nginx对私有仓库的安全认证
1.在宿主机上用htpasswd生成用户名和密码，作为nginx basic auth 的用户名和密码 
如果没有htpasswd命令，安装apt-get install apache2-utils -y
htpasswd -b -c -d docker-registry.htpasswd wsylib test

2.在宿主机上做好https自签名证书(参见https://medium.com/@deeeet/building-private-docker-registry-with-basic-authentication-with-self-signed-certificate-using-it-e6329085e612） 
#ca自签证
echo 01 > ca.srl
openssl genrsa -des3 -out ca-key.pem 2048
openssl req -new -x509 -days 365 -key ca-key.pem -out ca.crt
#服务器签证
openssl genrsa -des3 -out server-key.pem 2048
# We should remove the passphrase from server key:
openssl rsa -in server-key.pem -out server.key
openssl req -subj /CN=lightningli.co -new -key server-key.pem -out server.csr
openssl x509 -req -days 365 -in server.csr -CA ca.crt -CAkey ca-key.pem -out server-cert.crt


3.用nginx容器中配好https服务 cp docker-registry.htpasswd /etc/nginx/

cp server-cert.crt /etc/ssl/certs/docker-registry
cp server.key /etc/ssl/private/docker-registry

4.编写nginx配置文件（参见 https://github.com/docker/docker-registry/tree/master/contrib/nginx）

cp nginx.conf /etc/nginx
cp nginx.default /etc/nginx/sites-enabled/default

5.将ca证书导入docker宿主机
cat ca.pem >> /etc/ssl/certs/ca-certificates.crt
service docker restart

6.测试
docker run -d --name registry -p 5000:5000 registry
docker run -d --name Anginx --hostname wsylib.com -p 443:443 --link registry:registry wsylib/docker-auth-registry
docker tag scratch wsylib/scratch

记得修改/etc/hosts 添加： 127.0.0.1 wsylib.com

docker login -u wsylib -p test wsylib.com

docker push wsylib.com/scratch